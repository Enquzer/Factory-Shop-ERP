diff --git a/node_modules/@genkit-ai/core/lib/node.js b/node_modules/@genkit-ai/core/lib/node.js
index c8438a2c2628469d7aa7e84a27548b8a531a69a4..9d0092f64121e7a33f5d5272a2764a856a935930 100644
--- a/node_modules/@genkit-ai/core/lib/node.js
+++ b/node_modules/@genkit-ai/core/lib/node.js
@@ -16,7 +16,7 @@
  */
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.runFlow = exports.getFlow = exports.listFlows = exports.defineFlow = exports.getFlows = exports.configure = exports.eval = exports.generate = exports.defineTool = exports.definePrompt = exports.defineModel = exports.defineRetriever = exports.defineIndexer = exports.defineEmbedder = exports.runAction = exports.defineAction = exports.getActions = void 0;
-const node_telemetry_provider_1 = require("./tracing/node-telemetry-provider");
 (0, node_telemetry_provider_1.initNodeTelemetry)();
 const action_1 = require("./action");
 Object.defineProperty(exports, "getActions", { enumerable: true, get: function () { return action_1.getActions; } });
diff --git a/node_modules/@genkit-ai/core/lib/tracing/node-telemetry-provider.js b/node_modules/@genk
index 548c081e74f884102c77da7268d002f2324901f4..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 100644
--- a/node_modules/@genkit-ae/core/lib/tracing/node-telemetry-provider.js
+++ b/node_modules/@genkit-ai/core/lib/tracing/node-telemetry-provider.js
@@ -1,11 +1,3 @@
-"use strict";
-/**
- * @license
- * Copyright 2024 Google LLC
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.initNodeTelemetry = void 0;
-const sdk_node_1 = require("@opentelemetry/sdk-node");
-const contrib_js_1 = require("@opentelemetry/contrib-js");
-const api_1 = require("@opentelemetry/api");
-const OTLPTraceExporter = contrib_js_1.otel.trace.OTLPTraceExporter;
-const OTLPMetricExporter = contrib_js_1.otel.metrics.OTLPMetricExporter;
-function initNodeTelemetry(options) {
-    if (process.env.GENKIT_TELEMETRY_DISABLED) {
-        return;
-    }
-    const sdk = new sdk_node_1.NodeSDK({
-        traceExporter: new OTLPTraceExporter(),
-        metricReader: new contrib_js_1.otel.metrics.PeriodicExportingMetricReader({
-            exporter: new OTLPMetricExporter(),
-        }),
-        autoDetectResources: true,
-    });
-    sdk.start();
-    if (options === null || options === void 0 ? void 0 : options.instrumentations) {
-        (0, contrib_js_1.registerInstrumentations)({
-            instrumentations: options.instrumentations,
-            tracerProvider: api_1.trace.getTracerProvider(),
-            meterProvider: api_1.metrics.getMeterProvider(),
-        });
-    }
-}
-exports.initNodeTelemetry = initNodeTelemetry;
+function initNodeTelemetry(options) {}
+exports.initNodeTelemetry = initNodeTelemetry;
 //# sourceMappingURL=node-telemetry-provider.js.map
\ No newline at end of file
